#!/usr/bin/env ruby
### loads the active-orient environment
### and starts an interactive shell
###
### Parameter: t)ws | g)ateway (or number of port ) Default: Gateway ,
###							client_id , Default 2000
###
### Define Parameter in  file console.yml
###
require 'bundler/setup'
require 'yaml'

require 'ib-api'

class Array
  # enables calling members of an array. which are hashes  by it name
  # i.e
  #
  #  2.5.0 :006 > C.received[:OpenOrder].local_id
  #   => [16, 17, 21, 20, 19, 8, 7]
  #   2.5.0 :007 > C.received[:OpenOrder].contract.to_human
  #    => ["<Bag: IECombo SMART USD legs:  >", "<Stock: GE USD>", "<Stock: GE USD>", "<Stock: GE USD>", "<Stock: GE USD>", "<Stock: WFC USD>", "<Stock: WFC USD>"]
  #
  # its included only in the console, for inspection purposes

  def method_missing(method, *key)
    unless method == :to_hash || method == :to_str #|| method == :to_int
      return self.map{|x| x.public_send(method, *key)}
    end

  end
end # Array


# read items from console.yml
  read_yml = -> (key) do
		YAML::load_file( File.expand_path('../console.yml',__FILE__))[key]
	end

  puts
  puts ">> IB-API Interactive Console <<"
  puts '-'* 45
  puts
  puts "Namespace is IB ! "
  puts
  puts '-'* 45
  include IB
  require 'irb'
  client_id = ARGV[1] || read_yml[:client_id]
  specified_host = ARGV[0] || 'Gateway'
	host =  case specified_host
					when /^[gG]/ 
						read_yml[:gateway]
					when /^[Tt]/
						read_yml[:tws]
          else
            raise "Specify target from console.yml: `g|t` instead of #{specified_host}"
					end
  ARGV.clear

  C =  Connection.new  client_id: client_id, host: host
  C.logger.level = Logger::WARN

  C.subscribe(:Alert){ |m| puts "A: "+ m.message }
  C.subscribe(:AccountUpdateTime){  }

  C.received = true
  C.activate_plugin :connection_tools, :symbols, :market_price,
                    "order-prototypes", "spread-prototypes",
                    "advanced_account", 'process_orders'
  C.logger.level = Logger::INFO
  C.get_account_data
  C.request_open_orders
  C.logger.level = Logger::ERROR
  puts  "Connection established on  #{host}"

  unless  C.received[:OpenOrder].blank?
        puts "---------------------------------------- OpenOrders -------------------------------------------"
        puts C.clients.map{ |c| c.orders.map &:to_human }.flatten.join("\n")
  end
  puts ""
  puts  Terminal::Table.new title: 'Active Plugins',
                             rows: C.plugins.delete_if{ |x| x =~ /\// }.sort.each_slice(4),
                            style: { border: :unicode  }
  puts
  puts  "----> C    points to the connection-instance"
  puts
  puts '-'* 45

  IRB.start(__FILE__)
