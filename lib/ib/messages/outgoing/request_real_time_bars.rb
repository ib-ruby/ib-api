module IB
  module Messages
    module Outgoing
      extend Messages # def_message macros


      #  data = { :id => ticker_id (int),
      #           :contract => Contract ,
      #           :bar_size => int/Symbol? Currently only 5 second bars are supported,
      #                        if any other value is used, an exception will be thrown.,
      #           :data_type => Symbol: Determines the nature of data being extracted.
      #                       :trades, :midpoint, :bid, :ask, :bid_ask,
      #                       :historical_volatility, :option_implied_volatility,
      #                       :option_volume, :option_open_interest
      #                       - converts to "TRADES," "MIDPOINT," "BID," etc...
      #          :use_rth => int: 0 - all data available during the time span requested
      #                     is returned, even data bars covering time intervals where the
      #                     market in question was illiquid. 1 - only data within the
      #                     "Regular Trading Hours" of the product in question is returned,
      #                     even if the time span requested falls partially or completely
      #                     outside of them.
      #
      #  Version 3 
      RequestRealTimeBars = def_message [ 50, 3 ], BarRequestMessage,
				:request_id  # autogenerated if not specified

      class RequestRealTimeBars
        def parse data
          data_type, bar_size, contract = super data

          size = data[:bar_size] || data[:size]
          bar_size = 5 #  only 5 sec bars are supported   --> for future use ::> size.to_i
          [data_type, bar_size, contract]
        end

        def encode
          data_type, bar_size, contract = parse @data

          [
            super,
            contract.serialize_short(:primary_exchange),  # include primary exchange in request
            bar_size,
            data_type.to_s.upcase,
            @data[:use_rth] ,
            ""   # not suported realtimebars option string
          ]
        end
      end
    end
  end # RequestRealTimeBars
end
